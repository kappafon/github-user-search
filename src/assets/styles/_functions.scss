@function px-to-rem($value, $root-value: 16px) {
    @return 1rem * ($value / $root-value);
}

/// Converts a px input unit into a responsive 'Viewport Height' unit. It defaults to that (input) value on Full HD resolution (1920*1080)
/// It keeps 1/3 of the input unit fixed (as a lower limit) and adds 2/3 equivalent 'vh'
/// @param $value - input value in px, e.g. input exact value from mockup specs
/// @example - margin: px-to-vh(30px) 0;
@function px-to-vh($value, $root-value: 1080px) {
    $vh: $root-value * 0.01;
    $min-value: ($value / 3);
    $responsive-part: ($value - $min-value);

    @return Calc(#{$min-value} + 1vh * ($responsive-part / $vh));
}

/// Converts a px input unit into a responsive 'Viewport Width' unit. It defaults to that (input) value on Full HD resolution (1920*1080)
/// It keeps 1/3 of the input unit fixed (as a lower limit) and adds 2/3 equivalent 'vw'
/// @param $value - input value in px, e.g. input exact value from mockup specs
/// @example - margin: 0 px-to-vw(30px);
@function px-to-vw($value, $root-value: 1920px) {
    $vw: ($root-value * 0.01);
    $min-value: ($value / 3);
    $responsive-part: ($value - $min-value);

    @return Calc(#{$min-value} + 1vw * ($responsive-part / $vw));
}
